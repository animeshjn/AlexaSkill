/**
 * Created by Animesh Jain on 6/12/2017.
 */
/**
 * Read contents of a specific book here
 *
 * */
'use-strict';
var textProcessor= require('bookReadAnimesh/textprocessor');
var totalLines=0;
var linesPerPage=15;
var currentBookId="";
var booksFound=0;
var currentLine=0;
var downloadUrl="";
var start=0;

function getBookUrlByName(accessToken,name,request,response,extension,callback){
    var url;
    url=`https://www.googleapis.com/drive/v2/files?access_token=${accessToken}&q=title+%3d+%27${name+""+extension}%27`;
    console.log(url);
    var https=require('https');
    https.get(url,function(res) {
        var body = '';
        res.on('data', function (chunk) {
            body += chunk;
        });
        res.on('end', function () {
            var result = JSON.parse(body);
            var files;
            if (result) {
                var files = [];
                // booksFound=result['items'].length;
              // if(booksFound==0){
              //     return "";
              // }
                if (result['items'][0]['id']) {
                   currentBookId= result['items'][0]['id'];
                    console.log(currentBookId);
                }
               callback(result['items'][0]['downloadUrl']);
                //console.log(fileId);
                // download(result['items'][0]['downloadUrl'],contentLogger);
            }
            else {
                console.log("Problem getting download URL")
            }
        });
    });
}
/**
 * Returns textual data from the google drive url
 * @param url downloadUrl
 * @param accessToken of the authorized app
 * @returns {string} raw content extracted from file
 */
function getRawContentFromUrl(url,accessToken,callback){
    var driveinterface= require('bookReadAnimesh/drive-intertface');
    driveinterface.downloadFileContents(url,accessToken,callback);

}

function getBookDataByName(accessToken,name,request,response,session,extension,callbackForArray)
{
getBookUrlByName(accessToken,name,request,response,extension,callWithUrl);
function callWithUrl(downloadUrl){
    getRawContentFromUrl(downloadUrl,accessToken,manipulateContent);
    function manipulateContent(bookText){
     var contentArray={};
     if(bookText){
        contentArray=textProcessor.contentArray(bookText);
        totalLines=contentArray.length;
        console.log("Lines in this book: "+totalLines);
        callbackForArray(contentArray);
     }
    }
  }
}

//Read Whole book
module.exports.readWholeBook=function readWholeBook(accessToken,name,request,response,session,extension){
    getBookDataByName(accessToken,name,request,response,session,extension,callbackForArray);
    function callbackForArray(arrayText){
        console.log("call back received");
        var temp="";
        console.log("starting loop");
        if(session.attributes.currentLine){
           start=parseInt(JSON.stringify(session.attributes.currentLine));
           currentLine=parseInt(JSON.stringify(session.attributes.currentLine));
        }
        if(start<0){
            start=0;
        }
        if(currentLine<0){
            currentLine=0;
        }
        for(var i=start;i<(linesPerPage+start);i++){
               response.speechText+=" "+arrayText[i];
               currentLine++;
               session.attributes.currentLine=currentLine;
        }
        console.log("loop ended");
        response.speechText+="I am finished with this page, say: 'Continue', to keep reading;";
        response.shouldEndSession=false;
        response.done();
        console.log("response done");
    }
    // response.speechText+="I have finished reading the book, What you want me to do next ?";
    // response.shouldEndSession=false;
    // sendBack(response);
    // response.done();
    //   for(let i=0;i<wholeContent.length;i++){
    //        response.speechText+=" "+wholeContent[i];
    //       currentLine++;
    //       session.attributes.currentLine=currentLine;
    //   }

}


